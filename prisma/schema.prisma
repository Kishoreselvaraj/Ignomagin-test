generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}
enum Unit {
  MM
  CM
  M
  DEG
  RAD
}

enum SpeedUnit {
  MS    // meters per second
  DS   // degree per hour
}


model Task {
  id               String    @id @default(auto()) @map("_id") @db.ObjectId
  createdAt        DateTime  @default(now())
  // updatedAt         DateTime    @default(now()) @updatedAt
  cycleCount       Int
  motionType       String    // ✅ Added new field for motion
  part             String
  pos1             Float
  pos2             Float
  posUnit          Unit      // ✅ Store units as strings
  productId        String    // ✅ Use String for UUID consistency
  restTime         Int       // ✅ Added new field
  runTime          Int
  speed            Float
  speedUnit        SpeedUnit // ✅ Added speedUnit field
  taskName         String
  testMethod       String    // ✅ Added new field
  totalCycleCount  Int       // ✅ Added new field
  totalRunTime     Float       // ✅ Added new field
}




model User {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  username String @unique
  userId   String @unique
  password String
  role     String
  createdAt  DateTime @default(now())
}
model Product {
  id    String  @id @default(uuid()) @map("_id")  // Unique ID for each product
  name  String  // Product name
  imageUrl String? // Image URL
  parts Part[]  // One-to-many relationship with Part
}

model Part {
  id         String   @id @default(uuid()) @map("_id")  // Unique ID for each part
  productId  String   // Foreign key to link with Product
  product    Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  name       String   // Part name
  motionType Motion   // Enum for motion type
  pos1       Int?     // Nullable, required only for linear motion
  pos2       Int?     // Nullable, required only for linear motion
  unit      String?  // Nullable, required only for linear motion   
  speed      Int?     // Nullable, required only for rotary motion
}

enum Motion {
  LINEAR
  ROTARY
}




