generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}
model Task {
  id              String   @id @default(auto()) @map("_id") @db.ObjectId
  taskName        String
  productId       String   // Stored as string instead of reference
  part            String   // Storing part name instead of ID reference
  pos1            String
  pos2            String
  posUnit         String   @default("mm")
  speed           String
  speedUnit       String   @default("M/S")
  cycleCount      String
  totalCycleCount String
  runTime         String
  totalRunTime    String
  restTime        String
  motionType      String
  testMethod      String   @default("standard")
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}
  model User {
    id       String @id @default(auto()) @map("_id") @db.ObjectId
    username String @unique
    userId   String @unique
    password String
    role     String
    createdAt  DateTime @default(now())
  }
model Product {
  id    String  @id @default(uuid()) @map("_id")  // Unique ID for each product
  name  String  // Product name
  imageUrl String? // Image URL
  parts Part[]  // One-to-many relationship with Part
}

model Part {
  id         String   @id @default(uuid()) @map("_id")  // Unique ID for each part
  productId  String   // Foreign key to link with Product
  product    Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  name       String   // Part name
  motionType Motion   // Enum for motion type
  pos1       Int?     // Nullable, required only for linear motion
  pos2       Int?     // Nullable, required only for linear motion
  unit      String?  // Nullable, required only for linear motion   
  speed      Int?     // Nullable, required only for rotary motion
}

enum Motion {
  LINEAR
  ROTARY
}




